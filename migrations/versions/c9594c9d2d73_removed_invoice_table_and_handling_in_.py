"""removed invoice table and handling in the billing only

Revision ID: c9594c9d2d73
Revises: f7d01960ed61
Create Date: 2025-10-03 14:57:14.072872

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c9594c9d2d73'
down_revision = 'f7d01960ed61'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('invoice')
    with op.batch_alter_table('billing', schema=None) as batch_op:
        batch_op.add_column(sa.Column('amount_paid', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('logs', sa.Text(), nullable=True))
        batch_op.create_unique_constraint(None, ['prescription_id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('billing', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('logs')
        batch_op.drop_column('amount_paid')

    op.create_table('invoice',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('billing_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('payment_method', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('amount_paid', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('invoice_status', sa.VARCHAR(length=50), server_default=sa.text("'PAID'::character varying"), autoincrement=False, nullable=False),
    sa.Column('transaction_ref', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('paid_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['billing_id'], ['billing.id'], name=op.f('invoice_billing_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('invoice_pkey')),
    sa.UniqueConstraint('billing_id', name=op.f('invoice_billing_id_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###
